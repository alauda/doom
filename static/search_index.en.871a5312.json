[{"id":0,"title":"CodeQualityTaskSummary","content":"#","routePath":"/en/apis/advanced-apis/codeQualityTaskSummary","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"23c522e1b053ca6c476e98dffdab7edc264e6ab80b7bcc610d6ca5adf3ce9b04"},"version":""},{"id":1,"title":"Event APIs","content":"#","routePath":"/en/apis/advanced-apis/event/","lang":"en","toc":[],"domain":"","frontmatter":{"weight":60,"i18n":{"title":{"en":"Event APIs"}},"sourceSHA":"8809b094c8105f8604d2ba11aadb870bba8d9c03153a5fe6faf78ae05fe72532","title":"Event APIs"},"version":""},{"id":2,"title":"Search","content":"#","routePath":"/en/apis/advanced-apis/event/search","lang":"en","toc":[],"domain":"","frontmatter":{"weight":10,"i18n":{"title":{"en":"Search"}},"sourceSHA":"4a0c5ef180e6d30f12a222e38e3650ba6607dcb230ee913bda5155d9e116d4e9","title":"Search"},"version":""},{"id":3,"title":"Advanced API","content":"#","routePath":"/en/apis/advanced-apis/","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"0382e575d34ac794616a8180a66702ff3234f0e4985c06678ea8624756c255ff"},"version":""},{"id":4,"title":"Aggregation","content":"#","routePath":"/en/apis/advanced-apis/log/aggregation","lang":"en","toc":[],"domain":"","frontmatter":{"weight":10,"i18n":{"title":{"en":"Aggregation"}},"sourceSHA":"39884ddc096a7870717b76670797eecc9f570ac73e76b50818dd2c2614b2fcba","title":"Aggregation"},"version":""},{"id":5,"title":"Log APIs","content":"#","routePath":"/en/apis/advanced-apis/log/","lang":"en","toc":[],"domain":"","frontmatter":{"weight":60,"i18n":{"title":{"en":"Log APIs"}},"sourceSHA":"b78ccbd9949f70870d0959e026b530bfb367e60078efc0c9b44dc5b27c60717d","title":"Log APIs"},"version":""},{"id":6,"title":"Search","content":"#","routePath":"/en/apis/advanced-apis/log/search","lang":"en","toc":[],"domain":"","frontmatter":{"weight":10,"i18n":{"title":{"en":"Search"}},"sourceSHA":"3e708205c6a8169d217363cee866bfbff51c55866ee5f3dfec1f382378d190a1","title":"Search"},"version":""},{"id":7,"title":"Projects","content":"#","routePath":"/en/apis/advanced-apis/projects","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"8284f5be7fcc65509936f4eb3aaf7e15600abd6d06c9fd3b892700e90087d534"},"version":""},{"id":8,"title":"ArtifactCleanupRun","content":"#","routePath":"/en/apis/crds/ArtifactCleanupRun","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"4a2ce90c52c2be75672f555a9d3db31f5f81de8bff3633e817931f8169fe9b15"},"version":""},{"id":9,"title":"CRDs","content":"#","routePath":"/en/apis/crds/","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"f23038cb4b9a01c86a4f6054833814d01f4098d0434969fa69e3aa8838c592d7"},"version":""},{"id":10,"title":"APIs","content":"#\n\nThe apis entry is only for demonstration purposes. It is not a real API.","routePath":"/en/apis/","lang":"en","toc":[],"domain":"","frontmatter":{"weight":200,"sourceSHA":"5ed612d2ab47d7da6c6f0a757a047f99a16fd8f3668003b822ea4b80223eb167"},"version":""},{"id":11,"title":"CodeQuality","content":"#","routePath":"/en/apis/references/CodeQuality","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"2c67842e9f79049f5fc665d1814732f862a46ace20d7b5ba89f75d0d9e1c2e67"},"version":""},{"id":12,"title":"CodeQualityBranch","content":"#","routePath":"/en/apis/references/CodeQualityBranch","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"2a56e9f96548e1af73c6a5f88305b3529b4b72a6d65519478046250d084a95af"},"version":""},{"id":13,"title":"Public References","content":"#","routePath":"/en/apis/references/","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"05766f5f193fef000e33c391ceef9d6be11b437c963686a3b2573c5a29eff3ac"},"version":""},{"id":14,"title":"Introduction","content":"#\n\nDoom is a documentation development tool designed for internal use at Alauda,\nbuilt on top of rspress. It provides users with a rich set of built-in plugins\nfor an out-of-the-box experience.\n\n\nCore Capabilities#\n\n * Automatically generates a configurable weight (order) left sidebar\n * Full-text static document search\n * Multilingual support\n\n\nBased on Markdown and its extension MDX#\n\nMDX is a powerful content development approach. You can write Markdown files as\nyou normally would while also using React components within the Markdown\ncontent:\n\n\n\nFor more details, you can refer to the “Using MDX” documentation.\n\n\nGet Started#\n\nLet's get started quickly with Doom!","routePath":"/en/","lang":"en","toc":[{"text":"Core Capabilities","id":"core-capabilities","depth":2,"charIndex":195},{"text":"Based on Markdown and its extension MDX","id":"based-on-markdown-and-its-extension-mdx","depth":2,"charIndex":347},{"text":"Get Started","id":"get-started","depth":2,"charIndex":622}],"domain":"","frontmatter":{"sourceSHA":"543876a0d8e3cc97fc03d77601633ed748d09085ee758fd9b7c9a4b2111a14e0"},"version":""},{"id":15,"title":"Start","content":"#\n\n\nCreate Project#\n\nFirst, you can create a new directory using the following command:\n\nmkdir my-docs && cd my-docs\n\n\nRun npm init -y to initialize a project. You can use npm, yarn, or pnpm to\ninstall doom:\n\nThen, create files using the following commands:\n\n# Create docs directory, supporting both Chinese and English by default\nmkdir docs/en && echo '# Hello World' > docs/en/index.md\nmkdir docs/zh && echo '# 你好世界' > docs/zh/index.md\n\n\nAdd the following scripts in package.json:\n\n{\n  \"scripts\": {\n    \"dev\": \"doom dev\",\n    \"build\": \"doom build\",\n    \"new\": \"doom new\",\n    \"serve\": \"doom serve\",\n    \"translate\": \"doom translate\",\n    \"export\": \"doom export\"\n  }\n}\n\n\nThen initialize a configuration file doom.config.yml:\n\ntitle: My Docs\n\n\nAlso, create a tsconfig.json file with the following content:\n\n{\n  \"compilerOptions\": {\n    \"jsx\": \"react-jsx\",\n    \"module\": \"NodeNext\",\n    \"moduleResolution\": \"NodeNext\",\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    \"resolveJsonModule\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"target\": \"ESNext\",\n  },\n  \"mdx\": {\n    \"checkMdx\": true,\n  },\n}\n\n\nLastly, create a global.d.ts file with the following content:\n\n/// <reference types=\"@alauda/doom/runtime\" />\n\n\nNow you can use the global components provided by doom in your .mdx files with\ntype safety.\n\n\nCommand Line Tool#\n\ndoom -h\n\n# output\nUsage: doom [options] [command]\n\nDoctor Doom making docs.\n\nOptions:\n  -V, --version                   output the version number\n  -c, --config <config>           Specify the path to the config file\n  -v <version>                    Specify the version of the documentation, can also be `unversioned` or `unversioned-x.y`\n  -b, --base <base>               Override the base of the documentation\n  -p, --prefix <prefix>           Specify the prefix of the documentation base\n  -f, --force [boolean]           Force to\n                                  1. fetch latest reference remotes or scaffolding templates, otherwise use local cache\n                                  2. translate ignore hash equality check and original text (default: false)\n  -i, --ignore [boolean]          Ignore internal routes (default: false)\n  -d, --download [boolean]        Display download pdf link on nav bar (default: false)\n  -e, --export [boolean]          Run or build in exporting PDF mode, `apis/**` and `*/apis/**` routes will be ignored automatically (default: false)\n  -I, --include <language...>     Include **only** the specific language(s), `en ru` for example\n  -E, --exclude <language...>     Include all languages except the specific language(s), `ru` for example\n  -o, --out-dir <path>            Override the `outDir` defined in the config file or the default `dist/{base}/{version}`, the resulting path will be `dist/{outDir}/{version}`\n  -r, --redirect <enum>           Whether to redirect to the locale closest to `navigator.language` when the user visits the site, could be `auto`, `never` or `only-default-lang` (default: \"only-default-lang\")\n  -R, --edit-repo [boolean|url]   Whether to enable or override the `editRepoBaseUrl` config feature, `https://github.com/` prefix could be omitted (default: false)\n  -a, --algolia                   Whether to enable Algolia search (default: false)\n  -n, --no-open [boolean]         Do not open the browser after starting the server\n  -h, --help                      display help for command\n\nCommands:\n  dev [options] [root]            Start the development server\n  build [root]                    Build the documentation\n  preview|serve [options] [root]  Preview the built documentation\n  new [template]                  Generate scaffolding from templates\n  translate [options] [root]      Translate the documentation\n  export [options] [root]         Export the documentation as PDF, `apis/**` and `*/apis/**` routes will be ignored automatically\n  lint [root]                     Lint the documentation\n  help [command]                  display help for command\n\n\n\nStart Development Service#\n\nRun yarn dev to start the development service, and the browser will\nautomatically open the documentation homepage.\n\ndoom dev -h\n\n# output\nUsage: doom dev [options] [root]\n\nStart the development server\n\nArguments:\n  root                      Root directory of the documentation\n\nOptions:\n  -H, --host [host]         Dev server host name\n  -P, --port [port]         Dev server port number\n  -l, --lazy [boolean]      Whether to enable `lazyCompilation`, which could improve the compilation performance (default: false)\n  -h, --help                display help for command\n\n\n\nProduction Build#\n\nRun yarn build to build the production environment code. After the build is\ncompleted, static files will be generated in the dist directory.\n\n\nLocal Preview#\n\nRun yarn serve to preview the built static files. Note that if you used the -b,\n-p options to build, the same options are also required when previewing.\n\n\nUse Scaffolding Templates#\n\nRun yarn new to generate projects, modules, or documentation using scaffolding\ntemplates.\n\n\nTranslate Documentation#\n\ndoom translate -h\n\n# output\nUsage: doom translate [options] [root]\n\nTranslate the documentation\n\nArguments:\n  root                     Root directory of the documentation\n\nOptions:\n  -s, --source <language>  Document source language, one of en, zh, ru (default: \"en\")\n  -t, --target <language>  Document target language, one of en, zh, ru (default: \"zh\")\n  -g, --glob <path...>     Glob patterns for source dirs/files\n  -C, --copy [boolean]     Whether to copy relative assets to the target directory instead of following links (default: false)\n  -h, --help               display help for command\n\n\n * The -g, --glob parameter is required and can specify the directory or path of\n   files to be translated, supporting glob syntax. Note that the parameter value\n   must be quoted; otherwise, command line parsing may cause unexpected\n   behavior. Examples:\n   \n   1. yarn translate -g abc xyz will translate all documents in the\n      <root>/<source>/abc and <root>/<source>/xyz directories to\n      <root>/<target>/abc and <root>/<target>/xyz.\n   2. yarn translate -g '*' will translate all document files under\n      <root>/<source>.\n\n * The -C, --copy parameter is optional, determining whether to copy local\n   resource files to the target directory when a target file does not exist. The\n   default is false, which means changing the reference path of the resource\n   file to the source path. Examples:\n   \n   * When this parameter is enabled:\n     1. Translating /<source>/abc.jpg will copy <root>/public/<source>/abc.jpg\n        to <root>/public/<target>/abc.jpg and change the document's reference\n        path to /<target>/abc.jpg.\n     2. In <root>/<source>/abc.mdx, when translating the reference\n        ./assets/xyz.jpg, it will copy <root>/<source>/assets/xyz.jpg to\n        <root>/<target>/assets/xyz.jpg, keeping the image reference path\n        unchanged.\n     3. In <root>/<source>/abc.mdx, when translating the reference\n        ./assets/<source>/xyz.jpg, it will copy\n        <root>/<source>/assets/<source>/xyz.jpg to\n        <root>/<target>/assets/<target>/xyz.jpg and change the document's\n        reference path to ./assets/<target>/xyz.jpg.\n   * If this parameter is not enabled:\n     1. Translating /<source>/abc.jpg, if <root>/public/<target>/abc.jpg already\n        exists, will change the document's reference path to /<target>/abc.jpg;\n        otherwise, it will keep the image reference path unchanged.\n     2. In <root>/<source>/abc.mdx, when translating the reference\n        ./assets/<source>/xyz.jpg, if <root>/<target>/assets/<target>/xyz.jpg\n        already exists, it will change the document's reference path to\n        ./assets/<target>/xyz.jpg; otherwise, it will change to\n        ../<source>/assets/<target>/xyz.jpg.\n\nWARNING\n\nIn particular, when using -g '*' for full translation, the file lists of the\nsource and target directories will be compared. Any unmatched target files,\nexcluding internalRoutes, will be automatically deleted.\n\nTIP\n\nThe translation function requires the local environment variable\nAZURE_OPENAI_API_KEY to be configured. Please contact your team leader for this\ninformation.\n\nMetadata can be used in the document to control translation behavior:\n\ni18n:\n  title:\n    en: DevOps Connectors\n  additionalPrompts: 'In this text, Connectors is a proper noun, do not translate it.'\n  disableAutoTranslation: false\ntitle: DevOps 连接器\n\n\n\nExport PDF#\n\nWARNING\n\nPlease run the yarn build operation before executing the export operation.\n\ndoom export -h\n\n# output\nUsage: doom export [options] [root]\n\nExport the documentation as PDF, `apis/**` and `*/apis/**` routes will be ignored automatically\n\nArguments:\n  root               Root directory of the documentation\n\nOptions:\n  -H, --host [host]  Serve host name\n  -P, --port [port]  Serve port number (default: \"4173\")\n  -h, --help         display help for command\n\n\nRun yarn export to export the documentation as a PDF file. Note that if you used\n-b, -p options to build, the same options are also required during export.\n\nThe export functionality relies on playwright. In the pipeline, please use\nbuild-harbor.alauda.cn/frontend/playwright-runner:doom as the base image for\ndependency installation and documentation building. You can set the following\nenvironment variable locally to speed up downloads:\n\nPLAYWRIGHT_DOWNLOAD_HOST=\"https://cdn.npmmirror.com/binaries/playwright\"\n","routePath":"/en/start","lang":"en","toc":[{"text":"Create Project","id":"create","depth":2,"charIndex":3},{"text":"Command Line Tool","id":"cli","depth":2,"charIndex":1331},{"text":"Start Development Service","id":"dev","depth":3,"charIndex":3986},{"text":"Production Build","id":"build","depth":3,"charIndex":4587},{"text":"Local Preview","id":"serve","depth":3,"charIndex":4749},{"text":"Use Scaffolding Templates","id":"new","depth":3,"charIndex":4920},{"text":"Translate Documentation","id":"translate","depth":3,"charIndex":5040},{"text":"Export PDF","id":"export","depth":3,"charIndex":8462}],"domain":"","frontmatter":{"sourceSHA":"946151a530ef59d66a096d2509b68a25f5a7951ba51158cff08ae746756b9f10"},"version":""},{"id":16,"title":"API Documentation","content":"#\n\nBased on actual business needs, we generally categorize APIs into two types:\nAdvanced APIs and CRDs (Custom Resource Definitions). Therefore, the directory\nstructure is typically organized as follows:\n\n│── apis\n│   ├── advanced-apis # Advanced APIs\n│   ├── crds # CRDs\n│   └── references # Common References\n\n\n\nAdvanced APIs#\n\n# CodeQualityTaskSummary\n\n\n\n\nRefer to CodeQualityTaskSummary.\n\n\nprops#\n\n * path: The path under OpenAPI schema paths\n * pathPrefix: Can be used to override the api.pathPrefix in global\n   configuration\n * openapiPath: Refer to Specifying OpenAPI Path\n\n\nCRD#\n\n# ArtifactCleanupRun\n\n\n\n\nRefer to ArtifactCleanupRun.\n\n\nprops#\n\n * name: CRD metadata.name\n * crdPath: Similar to Specifying OpenAPI Path, used to specify a particular CRD\n   file\n\n\nCommon References#\n\n# CodeQuality\n\n\n\n\nRefer to CodeQuality.\n\n\nprops#\n\n * schema: The name under OpenAPI schema definitions(v2) or\n   components/schemas(v3)\n * openapiPath: Refer to Specifying OpenAPI Path\n\n\nSpecifying OpenAPI Path#\n\nFor the OpenAPIPath and OpenAPIRef components, the default behavior is to search\nfor matches across all OpenAPI definition files. If you need to specify a\nparticular OpenAPI file, you can use the openapiPath property:\n\n<OpenAPIPath\n  path=\"/plugins/v1alpha1/template/codeQuality/task/{task-id}/summary\"\n  openapiPath=\"shared/openapis/katanomi.json\"\n/>\n","routePath":"/en/usage/api","lang":"en","toc":[{"text":"Advanced APIs","id":"advanced-apis","depth":2,"charIndex":313},{"text":"`props`","id":"props","depth":3,"charIndex":-1},{"text":"CRD","id":"crd","depth":2,"charIndex":582},{"text":"`props`","id":"props-1","depth":3,"charIndex":-1},{"text":"Common References","id":"common-references","depth":2,"charIndex":770},{"text":"`props`","id":"props-2","depth":3,"charIndex":-1},{"text":"Specifying OpenAPI Path","id":"specifying-openapi-path","depth":2,"charIndex":977}],"domain":"","frontmatter":{"weight":5,"sourceSHA":"0b49514f79d09a01026a8298196675d07468e9e90efd7acc6c77353dd24b72f3"},"version":""},{"id":17,"title":"Configuration","content":"---\ndescription: Configure `doom` documentation tool\nweight: 1\nsourceSHA: 99d5505366bd7c2a066dd673ddb80b0c0b17420a9ad29f8a71b6cb7f66b495f3\n---\n\n# Configuration {#configuration}\n\n## Configuration File {#config-file}\n\nIn most cases, a static `yaml` configuration file is sufficient. It supports `doom.config.yaml` or `doom.config.yml`. For more complex scenarios, such as requiring dynamic configurations or customizing `rspress` plugins, `js/ts` configuration files can be used, supporting various formats like `.js/.ts/.mjs/.mts/.cjs/.cts`.\n\nFor `js/ts` configuration files, we need to export the configuration, which can be achieved using the `defineConfig` function exported from `@alauda/doom/config` for type assistance:\n\n```ts\nimport { defineConfig } from '@alauda/doom/config'\n\nexport default defineConfig({})\n```\n\n## Basic Configuration {#basic}\n\n- `lang`: The default document language. To accommodate most projects, we support both Chinese and English documents by default, with the default language set to `en`. If the current document project does not require multilingual support, this can be set to `null` or `undefined`.\n- `title`: The document title, which will appear in the browser tab.\n- `logo`: The logo in the top left corner of the document. It supports image links and file paths; absolute paths reference files in the `public` directory, while relative paths refer to files relative to the current tool directory. By default, it uses the built-in Alauda logo from the `doom` package.\n- `logoText`: The document title that will display at the logo location in the top left corner.\n- `icon`: The document favicon, which defaults to the same as `logo`.\n- `base`: The base path for the document, used for deployment to non-root paths, such as `product-docs`, defaults to `/`.\n- `outDir`: The output directory for build artifacts, defaulting to `dist/{base}/{version}`. If specified, it changes to `dist/{outDir}/{version}` where `version` is optional. Refer to [multi-version builds](./deploy#multi-version-builds).\n\n## API Documentation Configuration {#api}\n\n```yaml\napi:\n  # CRD definition file path, relative to the directory where doom.config.* is located; supports glob matching, json/yaml files.\n  crds:\n    - docs/shared/crds/*.yaml\n  # OpenAPI definition file path, relative to the directory where doom.config.* is located; supports glob matching, json/yaml files.\n  openapis:\n    - docs/shared/openapis/*.json\n  # When rendering OpenAPI related resource definitions, they are inline on the page by default. If you want to extract related resource definitions into a separate file, you can configure the following options.\n  # Refer to https://doom.alauda.cn/apis/references/CodeQuality.html#v1alpha1.CodeQualitySpec\n  references:\n    v1alpha1.CodeQualityBranch: /apis/references/CodeQualityBranch#v1alpha1.CodeQualityBranch\n  # Optional, the API documentation path prefix. If the current business uses a gateway or proxy service, this option can be configured.\n  pathPrefix: /apis\n```\n\nFor writing documentation, refer to [API documentation](./api).\n\n## Permission Explanation Document Configuration {#permission}\n\n```yaml\n# Resource file paths below are relative to the directory where doom.config.* is located; supports glob matching, json/yaml files.\npermission:\n  functionresources:\n    # `kubectl get functionresources`\n    - docs/shared/functionresources/*.yaml\n  roletemplates:\n    # `kubectl get roletemplates -l auth.cpaas.io/roletemplate.official=true`\n    - docs/shared/roletemplates/*.yaml\n```\n\nFor writing documentation, refer to [permissions documentation](./permission).\n\n## Reference Document Configuration {#reference}\n\n```yaml\nreference:\n  - repo: alauda-public/product-doc-guide # Optional, the repository address of the reference document. If not filled, the current document repository address will be used by default.\n    branch: # [string] Optional, the branch of the reference document repository.\n    publicBase: # [string] Optional, when using a remote repository, the absolute path to the static resource directory corresponding to /images/xx.png, defaults to docs/public.\n    sources:\n      - name: anchor # The name of the reference document, used for referencing in the document and must be globally unique.\n        path: docs/index.mdx#introduction # The path to the reference document; supports anchor positioning. Remote paths are relative to the repository root, and local paths are relative to the directory where doom.config.* is located.\n        ignoreHeading: # [boolean] Optional, whether to ignore the title. If true, the heading title will not be shown in the referenced document.\n        processors: # Optional, content processors for the referenced document.\n          - type: ejsTemplate\n            data: # ejs template parameters, accessed using `<%= data.xx %>`.\n        frontmatterMode: merge # Optional, the mode for processing the frontmatter of the referenced document, defaults to ignore. Possible values are ignore/merge/replace/remove.\n```\n\n### `frontmatterMode`\n\n- `ignore`: Ignores the frontmatter of the referenced document, keeping the current document's frontmatter.\n- `merge`: Merges the frontmatter of the referenced document. If there are the same keys, the values from the referenced document will overwrite the current document's values.\n- `replace`: Replaces the current document's frontmatter with that of the referenced document.\n- `remove`: Removes the current document's frontmatter.\n\nFor writing documentation, refer to [reference documentation](./reference).\n\n## Release Notes Configuration {#release-notes}\n\n```yaml\nreleaseNotes:\n  queryTemplates:\n    fixed: # May include jql statements with ejs templates.\n    unfixed:\n```\n\n```md title=\"release-notes.md\"\n<!-- release-notes-for-bugs?template=fixed&project=DevOps -->\n```\n\n```mdx title=\"release-notes.mdx\"\n{/* release-notes-for-bugs?template=fixed&project=DevOps */}\n```\n\nTaking the above `template=fixed&project=DevOps` as an example, `fixed` is the template name defined in `queryTemplates`, and the remaining `query` parameter `project=DevOps` will be passed as parameters to the ejs template to process the `fixed` template which in turn initiates a Jira [`jql`](https://www.atlassian.com/zh/software/jira/guides/jql/overview#what-is-jql) request at `https://jira.alauda.cn/rest/api/2/search?jql=<jql>`. This API requires authentication and needs environment variables `JIRA_USERNAME` and `JIRA_PASSWORD` to preview the results.\n\n## Left Navigation Configuration {#sidebar}\n\n```yaml\nsidebar:\n  collapsed: false # Optional, whether to default the left navigation to be collapsed. Defaults to collapsed. If there is not much document content, it can be set to false.\n```\n\n## Internal Document Routes Configuration {#internal-routes}\n\n```yaml\ninternalRoutes: # Optional, supports glob matching, relative to the docs directory. Matched files will be ignored if the cli is enabled with the `-i, --ignore` option.\n  - '*/internal/**/*'\n```\n\n## Only Include Document Routes Configuration {#only-include-routes}\n\n```yaml\nonlyIncludeRoutes: # Optional, supports glob matching, relative to the docs directory. Only routes/files under this configuration will be activated when the cli is enabled with the `-i, --ignore` option. Can be used in conjunction with `internalRoutes` to further exclude some routes within.\n  - '*/internal/**/*'\ninternalRoutes:\n  - '*/internal/overview.mdx'\n```\n\n## Language Highlight Plugin Configuration {#highlight}\n\n```yaml\nshiki:\n  theme: # Optional, https://shiki.style/themes\n  langs: # Optional, https://shiki.style/languages\n  transformers: # Optional, only available in js/ts config, https://shiki.style/guide/transformers\n```\n\n:::warning\nLanguages that are not configured will prompt a warning on the command line and will fall back to `plaintext` rendering.\n:::\n\n## `sites.yaml` Configuration {#sites}\n\nThe `sites.yaml` configuration file is used to configure the sub-site information associated with the current documentation site. This defined information will be used when [referring to external site components](./mdx#externalsite) and building single-version documents.\n\n```yaml\n- name: connectors # Globally unique name\n  base: /devops-connectors # Base path for site access\n  version: v1.1 # Version for ExternalSite/ExternalSiteLink redirection when building multi-version sites\n\n  displayName: # Site display name, defaults to name if not filled or no match for language.\n    en: DevOps Connectors\n    zh: DevOps 连接器\n\n  # The following properties are used to pull images when building the full site. If not filled, this will be ignored during the final complete site package.\n  # Generally, it is necessary to configure the relevant information for sub-site references, but not required for parent site references.\n  repo: https://github.com/AlaudaDevops/connectors-operator # Site repository address. For internal GitLab repositories, the relevant slug can be used directly, such as `alauda/product-docs`.\n  image: devops/connectors-docs # Site build image, used for pulling images when building the full site.\n```\n\n## Translation Configuration {#translate}\n\n```yaml\ntranslate:\n  # System prompt message, ejs template. The passed parameters are `sourceLang`, `targetLang`, `userPrompt`, and `additionalPrompts`.\n  # `sourceLang` and `targetLang` are the strings `中文` and `英文`, respectively.\n  #     `userPrompt` is the global user configuration below, which may be empty.\n  #     `additionalPrompts` is the `additionalPrompts` configuration in the document `frontmatter.i18n`, which may also be empty.\n  # The default system prompt message is as follows; it can be modified based on actual needs.\n  systemPrompt: |\n## Role\nYou are a professional technical documentation engineer, skilled in writing high-quality <%= targetLang %> technical documentation. Please help me accurately translate the following <%= sourceLang %> into <%= targetLang %>, maintaining the style consistent with <%= targetLang %> technical documents.\n\n## Rules\n- The first message is the latest <%= sourceLang %> document that needs to be translated. The second message is a previously translated <%= targetLang %> document, which may be outdated. If not previously translated, it will be empty.\n- The input format is MDX format, and the output format must also retain the original MDX format. Do not translate the JSX component names in it, such as <Overview />. Do not wrap it in unnecessary code blocks.\n- Resource links in the document should not be translated or replaced.\n- The content included in MDX components needs to be translated. The MDX component names and parameter values should not be translated. However, special MDX component parameter values need to be translated. For example:\n  - In <Overview />, \"Overview\" is the component name and does not need to be translated.\n  - In <Tab label=\"value\">Component Content</Tab>, \"label\" is a key and does not need to be translated, while \"value\" is a parameter value that needs to be translated.\n<%= terms %>\n- If the following comments exist, retain them without translation and do not modify the comment content.\n  - {/* release-notes-for-bugs */}\n  - <!-- release-notes-for-bugs -->\n- If the following comments exist, remove them entirely and do not keep.\n  - {/* reference-start */}\n  - {/* reference-end */}\n  - <!-- reference-start -->\n  - <!-- reference-end -->\n- During the translation process, be sure to retain the original \\\\< and \\\\{ escape characters in the document without making any changes.\n- Do not disrupt the original Markdown format during the translation, such as frontmatter, code blocks, lists, tables, etc. The content of frontmatter.ii8n should not be translated; it should be returned as is.\n\n## Strategy\nThe translation work is divided into four steps:\n1. Translate the <%= sourceLang %> document directly into <%= targetLang %>, maintaining the original format without omitting any information.\n2. Identify specific issues in the direct translation from the first step, describing them accurately. Do not generalize and do not add any content or format not present in the original, including but not limited to:\n - Non-compliance with <%= targetLang %> expression habits. Clearly point out where it does not comply.\n - Sentences that are not fluent, indicating the positions without needing to provide suggestions for modification; repair during paraphrasing.\n - Ambiguous or difficult-to-understand phrases can be attempted to be explained.\n3. Based on the direct translation result and the issues pointed out in the second step, rephrase while ensuring that the original meaning remains intact, making it easier to understand and more compliant with <%= targetLang %> technical documentation expression habits, while keeping the original format unchanged.\n4. When there exist previously translated <%= targetLang %> documents, compare the results from step three with the previous <%= targetLang %> document in detail, ensuring no new segments (including text, resource links, etc.) are omitted. If the translation results within the segment are roughly similar in meaning, differing only in expression without introducing new content, that segment should retain the previously translated content without re-translation.\n\nThe final output should only include the results from the last step, and previous step results should not be output.\n\n<%= userPrompt %>\n\n<%= additionalPrompts %>\n  userPrompt: # optional, used to fill in the global parameters of the `ejs` template in `systemPrompt`.\n```\n\n## Edit Documentation in Code Repository {#edit-repo}\n\n```yaml\neditRepoBaseUrl: alauda/doom/tree/main/docs # The prefix https://github.com/ can be omitted; it only takes effect when the `-R, --edit-repo` command line flag is enabled.\n```\n\n## Document Linting Configuration {#lint}\n\n```yaml\nlint:\n  cspellOptions: # optional, cspell configuration options, refer to https://github.com/streetsidesoftware/cspell/tree/main/packages/cspell-eslint-plugin#options\n```\n\n## Algolia Search Configuration {#algolia}\n\n```yaml\nalgolia:\n  appId: # Algolia application ID\n  apiKey: # Algolia API Key\n  indexName: # Algolia index name\n```\n","routePath":"/en/usage/configuration","lang":"en","toc":[{"text":"Configuration File","id":"config-file","depth":2,"charIndex":3},{"text":"Basic Configuration","id":"basic","depth":2,"charIndex":553},{"text":"API Documentation Configuration","id":"api","depth":2,"charIndex":1726},{"text":"Permission Explanation Document Configuration","id":"permission","depth":2,"charIndex":2741},{"text":"Reference Document Configuration","id":"reference","depth":2,"charIndex":3235},{"text":"`frontmatterMode`","id":"frontmattermode","depth":3,"charIndex":-1},{"text":"Release Notes Configuration","id":"release-notes","depth":2,"charIndex":5143},{"text":"Left Navigation Configuration","id":"sidebar","depth":2,"charIndex":5811},{"text":"Internal Document Routes Configuration","id":"internal-routes","depth":2,"charIndex":6028},{"text":"Only Include Document Routes Configuration","id":"only-include-routes","depth":2,"charIndex":6262},{"text":"Language Highlight Plugin Configuration","id":"highlight","depth":2,"charIndex":6670},{"text":"`sites.yaml` Configuration","id":"sites","depth":2,"charIndex":-1},{"text":"Translation Configuration","id":"translate","depth":2,"charIndex":8265},{"text":"Edit Documentation in Code Repository","id":"edit-repo","depth":2,"charIndex":12682},{"text":"Document Linting Configuration","id":"lint","depth":2,"charIndex":12896},{"text":"Algolia Search Configuration","id":"algolia","depth":2,"charIndex":13099}],"domain":"","frontmatter":{"description":"Configure `doom` documentation tool","weight":1,"sourceSHA":"99d5505366bd7c2a066dd673ddb80b0c0b17420a9ad29f8a71b6cb7f66b495f3"},"version":""},{"id":18,"title":"Convention","content":"#\n\n\nDirectory Structure#\n\nThe left sidebar is automatically generated based on the file directory\nstructure, where the index file in the first-level directory acts as the\ndocument's homepage and will display as the first item in the left navigation.\nSubfolders can use index.md or index.mdx and define the first-level title to set\nthe grouping title for the left sidebar. Other sub-documents will be\nautomatically merged into the current group, and nested subfolders will follow\nthe same rules.\n\n├── index.md\n├── start.mdx\n└── usage\n    ├── index.mdx\n    └── convention.md\n\n\nWe also agree that:\n\n 1. The public directory is used to store static resources such as images,\n    videos, etc.\n 2. The public/_remotes directory is used to store static resources associated\n    with remote reference documents. Please do not directly rely on resources\n    from this directory; you may add */public/_remotes to .gitignore to prevent\n    these from being committed to the code repository.\n 3. The shared directory is for storing common components, reusable documents,\n    etc., and will not automatically generate document data.\n\n\nMetadata#\n\nAt the beginning of the document, you can define the document's metadata such as\ntitle, description, author, category, etc., through the frontmatter.\n\n---\ntitle: Title\ndescription: Description\nauthor: Author\ncategory: Category\n---\n\n\nIn the body of the document, when using .mdx files, you can access these\nmetadata through frontmatter as described in MDX.\n\n\nSorting#\n\nOther documents, except for index.md or index.mdx, will be sorted by default\naccording to their file names. You can customize the weight value in the\nfrontmatter to adjust the order of documents in the left sidebar (the smaller\nthe weight value, the higher the priority in sorting).\n\n---\nweight: 1\n---\n\n\nWARNING\n\nNote: Currently, changes to the left navigation configuration require a service\nrestart to take effect, and it is usually not necessary to pay too much\nattention during development.\n\n\nPreview#\n\nSometimes, we do not need to display special content on the group homepage. In\nthis case, you can use index.mdx file and the Overview component to display the\nlist of documents in the current group. This will showcase the titles,\ndescriptions, and secondary title information of the grouped list file.\n\n# Usage\n\n<Overview />\n\n\nYou can refer to Usage for the effect.","routePath":"/en/usage/convention","lang":"en","toc":[{"text":"Directory Structure","id":"directory-structure","depth":2,"charIndex":3},{"text":"Metadata","id":"metadata","depth":2,"charIndex":1121},{"text":"Sorting","id":"sorting","depth":2,"charIndex":1490},{"text":"Preview","id":"preview","depth":2,"charIndex":1997}],"domain":"","frontmatter":{"description":"Based on the principle of \"convention over configuration\", we agree on the organization of documents to automatically generate the left sidebar and related content.","weight":2,"sourceSHA":"3f99580728e8521b816ebd6078388278d51ce0c2ad99d5076d0152296afae3fe"},"version":""},{"id":19,"title":"Deployment","content":"Redirecting to /console-docs/4.1","routePath":"/en/usage/deploy","lang":"en","toc":[{"text":"Build and Preview","id":"build-and-preview","depth":2,"charIndex":-1},{"text":"Multi-Version Builds","id":"multi-version-builds","depth":2,"charIndex":-1},{"text":"Merged Directory Structure","id":"merged-directory-structure","depth":2,"charIndex":-1},{"text":"Dynamic Mounting Configuration File","id":"overrides","depth":2,"charIndex":-1}],"domain":"","frontmatter":{"description":"After completing the project development, we can deploy the project to the ACP platform.","weight":8,"sourceSHA":"c87a4a8346bc7c7c09d4aa01777c7196f17d414fb6f8673371b6c91e8537c5fe"},"version":""},{"id":20,"title":"Internationalization","content":"#\n\nMost of the internal documentation for alauda is bilingual in Chinese and\nEnglish. Therefore, we default to supporting the use of en/zh subfolders to\nstore documentation in different languages. It is recommended to also store\nstatic resources in en/zh subfolders under the public directory, which\nfacilitates the management of documentation content and static resources.\n\n\ni18n.json#\n\nFor reusable components that need to support both Chinese and English within the\nsame component, you must first create an i18n.json file in the docs directory.\nThen, you can use useI18n in the component to retrieve the text in the current\nlanguage, for example:\n\n{\n  \"title\": {\n    \"zh\": \"标题\",\n    \"en\": \"Title\"\n  },\n  \"description\": {\n    \"zh\": \"描述\",\n    \"en\": \"description\"\n  }\n}\n\n\n\n.ts/.tsx#\n\n\n\nexport const CommonContent = () => {\n  const t = useI18n()\n  return <h1>{t('title')}</h1>\n}\n\n\n\n.mdx#\n\n\n\n# {useI18n()('title')}\n\n{useI18n()('description')}\n","routePath":"/en/usage/i18n","lang":"en","toc":[{"text":"`i18n.json`","id":"i18njson","depth":2,"charIndex":-1},{"text":"`.ts/.tsx`","id":"tstsx","depth":2,"charIndex":-1},{"text":"`.mdx`","id":"mdx","depth":2,"charIndex":-1}],"domain":"","frontmatter":{"description":"Using Internationalized Text in Reusable Components","weight":4,"sourceSHA":"4d58a9b08beb6326213d8aebfc692c491d101b6ad2662c5f8281892977ec9f98"},"version":""},{"id":21,"title":"Usage","content":"#","routePath":"/en/usage/","lang":"en","toc":[],"domain":"","frontmatter":{"sourceSHA":"68c380e6705c33fb80070986a1ec80b36646b3231c92f026c7d13ffde9d20f52"},"version":""},{"id":22,"title":"Markdown","content":"#\n\nIn addition to the standard gfm syntax, Doom has some built-in extended Markdown\nfeatures.\n\n\nCallouts#\n\nSource code annotation component\n\nNOTE\n 1. Please use inline code comments according to the actual language, such as ;,\n    %, #, //, /** */, --, and <!-- -->.\n 2. If you need to treat it as a code comment, use [\\!code callout] for\n    escaping.\n 3. Sometimes, :::callouts may display incorrectly due to nested indentation;\n    you can use <div class=\"doom-callouts\"> or <Callouts> component instead.\n\n```sh\nMemory overhead per virtual machine ≈ (1.002 × requested memory) \\\n              + 218 MiB \\  # [!code callout]\n              + 8 MiB × (number of vCPUs) \\  # [!code callout]\n              + 16 MiB × (number of graphics devices) \\  # [!code callout]\n              + (additional memory overhead) # [!code callout]\n```\n\n:::callouts\n\n1. Required for the processes that run in the `virt-launcher` pod.\n2. Number of virtual CPUs requested by the virtual machine.\n3. Number of virtual graphics cards requested by the virtual machine.\n4. Additional memory overhead:\n   - If your environment includes a Single Root I/O Virtualization (SR-IOV) network device or a Graphics Processing Unit (GPU), allocate 1 GiB additional memory overhead for each device.\n   - If Secure Encrypted Virtualization (SEV) is enabled, add 256 MiB.\n   - If Trusted Platform Module (TPM) is enabled, add 53 MiB.\n\n:::\n\n\nMemory overhead per virtual machine ≈ (1.002 × requested memory) \\\n              + 218 MiB \\  # [!code callout]\n              + 8 MiB × (number of vCPUs) \\  # [!code callout]\n              + 16 MiB × (number of graphics devices) \\  # [!code callout]\n              + (additional memory overhead) # [!code callout]\n\n\n:::callouts\n\n 1. Required for the processes that run in the virt-launcher pod.\n 2. Number of virtual CPUs requested by the virtual machine.\n 3. Number of virtual graphics cards requested by the virtual machine.\n 4. Additional memory overhead:\n    * If your environment includes a Single Root I/O Virtualization (SR-IOV)\n      network device or a Graphics Processing Unit (GPU), allocate 1 GiB\n      additional memory overhead for each device.\n    * If Secure Encrypted Virtualization (SEV) is enabled, add 256 MiB.\n    * If Trusted Platform Module (TPM) is enabled, add 53 MiB.\n\n:::\n\nFor more source code conversion features, please refer to Shiki Transformers.\n\n\nMermaid#\n\nChart drawing tool\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n\n\nCombined with Markdown Preview Mermaid, you can preview in real-time within\nVSCode.","routePath":"/en/usage/markdown","lang":"en","toc":[{"text":"Callouts","id":"callouts","depth":2,"charIndex":95},{"text":"Mermaid","id":"mermaid","depth":2,"charIndex":2379}],"domain":"","frontmatter":{"weight":3,"sourceSHA":"11b29e882a00a517992fb910421ae98617ad987f086fe05f7794e443e5129a82"},"version":""},{"id":23,"title":"MDX","content":"#\n\nMDX is an extended syntax of Markdown that allows the use of JSX syntax within\nMarkdown. For usage, you can refer to rspress MDX.\n\n\nrspress Components#\n\nThe rspress theme provides a majority of the built-in components as global\ncomponents, which can be used directly in .mdx files without import, including:\n\n * Badge\n * Card\n * LinkCard\n * PackageManagerTabs\n * Steps\n * Tab/Tabs\n * Toc\n\nOther less frequently used components can be imported from @rspress/core/theme,\nfor example:\n\n\n\n\n\n\n\ndoom Components#\n\ndoom provides some global components to assist in document writing, which can be\nused directly without import. Currently, these include:\n\n\nOverview#\n\nComponent for document overview, used to display the document directory.\n\n\nDirective#\n\nSometimes, due to nested indentation, the custom container syntax may become\ninvalid. The Directive component can be used as a substitute.\n\n- The directory structure of multi-language documents (`doc/en`) needs to be fully consistent with the documents under the `doc/zh` directory to ensure that the links of multi-language documents are identical except for the language identifier.\n\n  <Directive type=\"danger\" title=\"Attention\">\n    If automated translation tools are used for translation, there is no need to\n    worry about this issue, as the automated translation tools will\n    automatically generate the directory structure of the target language\n    documents based on `doc/zh`.\n  </Directive>\n\n\n * The directory structure of multi-language documents (doc/en) needs to be\n   fully consistent with the documents under the doc/zh directory to ensure that\n   the links of multi-language documents are identical except for the language\n   identifier.\n\n\nExternalSite#\n\nComponent to reference external sites.\n\n<ExternalSite name=\"connectors\" />\n\n\n\nExternalSiteLink#\n\nComponent to reference external site links.\n\n<ExternalSiteLink name=\"connectors\" href=\"link.mdx#hash\" children=\"Content\" />\n\n\nTIP\n\nIn mdx, <ExternalSiteLink name=\"connectors\" href=\"link\" children=\"Content\" />\nhas a different meaning from the content below\n\n<ExternalSiteLink name=\"connectors\" href=\"link\">\n  Content {/* this will be rendered inside a `p` element */}\n</ExternalSiteLink>\n\n\nIf you do not want the text to be rendered inside a p element, you can use the\nchildren attribute as shown in the example above.\n\n\nAcpApisOverview and ExternalApisOverview#\n\nComponents to reference external site API overviews.\n\n<AcpApisOverview />\n{/* the same as the following */}\n<ExternalApisOverview name=\"acp\" />\n\n<ExternalApisOverview name=\"connectors\" />\n\n\n\nTerm#\n\nTerm component for plain text, dynamically mounted for injection.\n\n<Term name=\"company\" textCase=\"capitalize\" />\n<Term name=\"product\" textCase=\"lower\" />\n<Term name=\"productShort\" textCase=\"upper\" />\n\n\nprops#\n\n * name: Built-in term name, refer to dynamic mounting configuration file.\n * textCase: Text case transformation, optional values are lower, upper,\n   capitalize.\n\n\nTermsTable#\n\nComponent for displaying a list of built-in terms.\n\n<TermsTable />\n\n\nprops#\n\n * terms: NormalizedTermItem[], optional, a custom term list for reusing when\n   rendering custom terms in internal documentation.\n\n\nJsonViewer#\n\n<JsonViewer value={{ key: 'value' }} />\n\n\n\nCustom Component Reuse#\n\nAccording to conventions, we can extract reusable content to the shared\ndirectory, then import it where needed, for example:\n\n\n\n<CommonContent />\n\n\nIf you need to use more runtime related APIs, you can implement components using\n.jsx/.tsx and then import them into .mdx files.\n\n// shared/CommonContent.tsx\nexport const CommonContent = () => {\n  const { page } = usePageData()\n  return <div>{page.title}</div>\n}\n\n// showcase/content.mdx\n\n;<CommonContent />\n\n\nWARNING\n\nNote: Currently, components exported from .mdx do not support passing props. For\nscenarios where props need to be passed, please use .jsx/.tsx components for\ndevelopment, refer to this issue.","routePath":"/en/usage/mdx","lang":"en","toc":[{"text":"rspress Components","id":"rspress-components","depth":2,"charIndex":134},{"text":"doom Components","id":"doom-components","depth":2,"charIndex":491},{"text":"`Overview`","id":"overview","depth":3,"charIndex":-1},{"text":"`Directive`","id":"directive","depth":3,"charIndex":-1},{"text":"`ExternalSite`","id":"externalsite","depth":3,"charIndex":-1},{"text":"`ExternalSiteLink`","id":"externalsitelink","depth":3,"charIndex":-1},{"text":"`AcpApisOverview` and `ExternalApisOverview`","id":"acpapisoverview-and-externalapisoverview","depth":3,"charIndex":-1},{"text":"Term","id":"term","depth":3,"charIndex":2570},{"text":"`props`","id":"props","depth":4,"charIndex":-1},{"text":"`TermsTable`","id":"termstable","depth":3,"charIndex":-1},{"text":"`props`","id":"props-1","depth":4,"charIndex":-1},{"text":"`JsonViewer`","id":"jsonviewer","depth":3,"charIndex":-1},{"text":"Custom Component Reuse","id":"custom-component-reuse","depth":2,"charIndex":3231}],"domain":"","frontmatter":{"description":"Dynamic content display and content reuse can be achieved using MDX","weight":3,"sourceSHA":"afd842f895c2dc8f6d60d41be4a45d5a7c85f0098fa6a9c50ee62a34c90f6b43"},"version":""},{"id":24,"title":"Permission Description Document","content":"#\n\n<K8sPermissionTable functions={['devops-testplans', 'devops-testmodules']} />\n\n\n\nprops#\n\n * functions: string[] - Required. An array of FunctionResource resource names\n   to be displayed.\n\n\nExample#","routePath":"/en/usage/permission","lang":"en","toc":[{"text":"`props`","id":"props","depth":2,"charIndex":-1},{"text":"Example","id":"example","depth":2,"charIndex":-1}],"domain":"","frontmatter":{"weight":6,"sourceSHA":"d01a66b64bc788642b8b4ca768495158773cbd857eafa99a0de397b718c5ce59"},"version":""},{"id":25,"title":"Referencing Documents","content":"#\n\nIn Markdown files:\n\n<!-- reference-start#name -->\n\n<!-- reference-end -->\n\n\nIn MDX files:\n\n{/* reference-start#name */}\n\n{/* reference-end */}\n\n\nThe name above refers to the name of the referenced document. For more\ninformation, please refer to Document Reference Configuration. If the referenced\ndocument content uses static resources from a remote repository, the related\nstatic resources will be automatically stored locally in the\n<root>/public/_remotes/<name> directory.\n\nHere is an example using <!-- reference-start#ref -->:\n\n\nDocument Reference Configuration#\n\nreference:\n  - repo: alauda-public/product-doc-guide # Optional, repository address for the referenced document. If not provided, the current document repository address will be used by default.\n    branch: # [string] Optional, branch of the referenced document repository.\n    publicBase: # [string] Optional, the directory where static resources for remote repository located, corresponding to absolute paths like /images/xx.png. Default is docs/public.\n    sources:\n      - name: anchor # Name of the referenced document, used to reference within the document and must be globally unique.\n        path: docs/index.mdx#introduction # Path to the referenced document, supports anchor targeting; for remote repositories, relative to the repository root directory, and for local, relative to the directory of doom.config.*.\n        ignoreHeading: # [boolean] Optional, whether to ignore headings. If true, the anchor's title will not be displayed in the referenced document.\n        processors: # Optional, processors for handling the content of the referenced document.\n          - type: ejsTemplate\n            data: # EJS template parameters, accessed via `<%= data.xx %>`.\n        frontmatterMode: merge # Optional, mode for handling the frontmatter of the referenced document. Default is ignore. Possible values are ignore/merge/replace/remove.\n\n\n\nfrontmatterMode#\n\n * ignore: Ignores the frontmatter of the referenced document and retains the\n   frontmatter of the current document.\n * merge: Merges the frontmatter of the referenced document. If there are the\n   same keys, the values from the referenced document will overwrite those in\n   the current document.\n * replace: Replaces the frontmatter of the current document with that of the\n   referenced document.\n * remove: Removes the frontmatter of the current document.\n\nFor writing documentation, refer to Document Reference.","routePath":"/en/usage/reference","lang":"en","toc":[{"text":"Document Reference Configuration","id":"reference","depth":2,"charIndex":536},{"text":"`frontmatterMode`","id":"frontmattermode","depth":3,"charIndex":-1}],"domain":"","frontmatter":{"weight":7,"sourceSHA":"ebb89470ba5bca9d172ff55b57b112b9a0376eec28cc74cdd7c8248f3772de44"},"version":""}]